{"version":3,"sources":["assets/icons/Settings.png","assets/icons/Games.png","assets/icons/Weather.png","assets/icons/Music.png","store/reducers/appDrawer.js","store/actions/actionTypes.js","store/reducers/games.js","store/reducers/music.js","store/reducers/settings.js","store/reducers/reducer.js","components/Wheel/wheelEvents.js","keys.js","store/actions/musicActions.js","components/Wheel/Wheel.js","store/actions/wheelActions.js","components/DisplayItems/NotificationBar/NotificationBar.js","components/UI/Grid/Grid.js","components/DisplayItems/AppDrawer/AppDrawer.js","utils.js","components/UI/Spinner/Spinner.js","components/UI/Error/Error.js","components/DisplayItems/Weather/Weather.js","components/DisplayItems/Music/NowPlaying/NowPlaying.js","components/DisplayItems/Music/Library/MusicLibrary.js","components/DisplayItems/Music/Music.js","components/DisplayItems/Games/BallGame/BallGame.js","components/DisplayItems/Games/Countdown/Countdown.js","components/DisplayItems/Games/Games.js","components/UI/Toggler/Toggler.js","components/DisplayItems/Settings/Setting/Setting.js","components/DisplayItems/Settings/Settings.js","components/UI/Overlay/Overlay.js","components/DisplayScreen/DisplayScreen.js","components/IpodFrame/IpodFrame.js","App.js","index.js"],"names":["module","exports","initialState","isAppDrawerOpen","currentMenuItemIndex","totalMenuItems","menuItems","currentMenuItem","newMenuItemIndex","appDrawerReducer","state","action","type","gameMoveUp","gameMoveDown","gameSelectPressed","gamesReducer","tracks","loading","error","currentTrackIndex","currentTrackID","isNowPlayingOpen","nowPlayingTrack","togglePlay","newCurrentTrackIndex","musicReducer","id","length","isNightLightOn","isDarkModeOn","currentSettingIndex","totalSettings","settings","currentSetting","newSettingIndex","settingsReducer","toggledSetting","toggledSettingValue","rootReducer","combineReducers","appDrawer","music","games","prevAngle","setUpWheelRotateEvents","wheel","onMoveForward","onMoveBackward","ZingTouch","Region","bind","event","currentAngle","Math","floor","detail","angle","distanceFromOrigin","angleRotated","abs","wheelRotateEventsHandler","setUpWheelClickEvents","btnRefs","clickEvents","fwdBtnRef","current","onFwdBtnPressed","bwdBtnRef","onBwdBtnPressed","playPauseBtnRef","onPlayPauseBtnPressed","menuBtnRef","onMenuBtnPressed","selectBtnRef","onSelectBtnPressed","napsterKey","fetchTracksSuccessful","formatTracks","dispatch","a","axios","get","response","tracksData","data","trackData","track","songUrl","previewURL","name","artist","artistName","links","albums","href","albumUrl","albumData","imageUrl","images","imageData","url","push","connect","props","wheelRef","useRef","useEffect","ref","className","NotificationBar","useState","time","setTime","timer","setInterval","Date","toLocaleTimeString","hour","minute","clearInterval","grid","nRows","Children","count","children","nCols","gridStyle","gridTemplateColumns","gridTemplateRows","rowHeight","gap","style","icons","Settings","SettingsIcon","Games","GamesIcon","Weather","WeatherIcon","Music","MusicIcon","map","menuItem","styles","key","src","alt","formatTime","timeInSeconds","parseInt","ss","addPadding","mins","mm","hours","hh","num","spinner","Error","showSpinner","setShowSpinner","weatherData","setWeatherData","setError","successCallback","position","latitude","coords","longitude","res","tempKelvin","main","temp","temperature","parseFloat","toFixed","desc","weather","icon","iconUrl","console","log","navigator","geolocation","getCurrentPosition","err","Object","keys","weatherContent","content","resetNowPlaying","trackRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","updateCurrentTime","duration","paused","pause","play","playIcon","pauseIcon","playTime","isNaN","fetchTracks","currentTrackRef","scrollIntoView","behaviour","musicLibrary","trackProperties","moveUp","moveDown","selectPressed","ballRef","blockRef","pillarRef","scoreRef","checkGameInterval","restartGame","gameEnded","setGameEnded","addEventListener","top","getRandomHeight","ballTopPosition","getComputedStyle","blockTopPosition","pillarLeftPosition","left","detectCollision","ballPosition","game","resultScreen","random","Countdown","seconds","setTimer","decrementCountdown","prevTimer","countdown","gameLoading","setGameLoading","setTimeout","clearTimeout","Toggler","checked","isOn","readOnly","htmlFor","Setting","active","title","Overlay","MenuItems","screenRef","classList","toggle","overlay","MenuItem","ipodFrame","App","store","createStore","composeWithDevTools","applyMiddleware","getState","next","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9696628.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Settings.d5e51f97.png\";","module.exports = __webpack_public_path__ + \"static/media/Games.839a2c83.png\";","module.exports = __webpack_public_path__ + \"static/media/Weather.1a178d65.png\";","module.exports = __webpack_public_path__ + \"static/media/Music.2d2f3b57.png\";","// Reducer for AppDrawer\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\tisAppDrawerOpen: true,\r\n\tcurrentMenuItemIndex: 0,\r\n\ttotalMenuItems: 4,\r\n\tmenuItems: [\"Music\", \"Games\", \"Weather\", \"Settings\"],\r\n\tcurrentMenuItem: \"Music\",\r\n};\r\n\r\nlet newMenuItemIndex = null;\r\n\r\nconst appDrawerReducer = (state = initialState, action) => {\r\n\tif (action.type === actionTypes.MENU_PRESSED) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tisAppDrawerOpen: true,\r\n\t\t};\r\n\t}\r\n\tif (action.isAppDrawerOpen) {\r\n\t\tswitch (action.type) {\r\n\t\t\t// Move Forward\r\n\t\t\tcase actionTypes.MOVE_FORWARD:\r\n\t\t\t\tnewMenuItemIndex = (state.currentMenuItemIndex + 1) % state.totalMenuItems;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentMenuItemIndex: newMenuItemIndex,\r\n\t\t\t\t\tcurrentMenuItem: state.menuItems[newMenuItemIndex],\r\n\t\t\t\t};\r\n\t\t\t// Move Backward\r\n\t\t\t\tcase actionTypes.MOVE_BACKWARD:\r\n\t\t\t\tnewMenuItemIndex =\r\n\t\t\t\t\t(state.currentMenuItemIndex - 1 + state.totalMenuItems) %\r\n\t\t\t\t\tstate.totalMenuItems;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentMenuItemIndex: newMenuItemIndex,\r\n\t\t\t\t\tcurrentMenuItem: state.menuItems[newMenuItemIndex],\r\n\t\t\t\t};\r\n\r\n\t\t\tcase actionTypes.SELECT_PRESSED:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisAppDrawerOpen: false,\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n    }\r\n    return state\r\n};\r\n\r\nexport default appDrawerReducer;\r\n","export const MOVE_FORWARD = \"MOVE_FORWARD\";\r\nexport const MOVE_BACKWARD = \"MOVE_BACKWARD\";\r\n\r\nexport const MENU_PRESSED = \"MENU_PRESSED\";\r\nexport const FWD_PRESSED = \"FWD_PRESSED\";\r\nexport const BWD_PRESSED = \"BWD_PRESSED\";\r\nexport const PLAY_PAUSE_PRESSED = \"PLAY_PAUSE_PRESSED\";\r\nexport const SELECT_PRESSED = \"SELECT_PRESSED\";\r\n\r\nexport const FETCH_TRACKS_START = \"FETCH_TRACKS_START\";\r\nexport const FETCH_TRACKS_SUCCESS = \"FETCH_TRACKS_SUCCESS\";\r\nexport const FETCH_TRACKS_FAILED = \"FETCH_TRACKS_FAILED\";\r\nexport const RESET_NOW_PLAYING = \"RESET_NOW_PLAYING\";\r\n\r\nexport const TOGGLE_NIGHT_LIGHT = \"TOGGLE_NIGHT_LIGHT\";\r\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\r\n","// Reducer for Games\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\tgameMoveUp: 0,\r\n\tgameMoveDown: 0,\r\n\tgameSelectPressed: 0,\r\n};\r\n\r\nconst gamesReducer = (state = initialState, action) => {\r\n\tif (!action.isAppDrawerOpen && action.currentMenuItem === \"Games\") {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase actionTypes.MOVE_FORWARD:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tgameMoveUp: state.gameMoveUp + 1,\r\n\t\t\t\t};\r\n\t\t\tcase actionTypes.MOVE_BACKWARD:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tgameMoveDown: state.gameMoveDown + 1,\r\n\t\t\t\t};\r\n\t\t\tcase actionTypes.SELECT_PRESSED:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tgameSelectPressed: state.gameSelectPressed + 1,\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n    }\r\n    return state\r\n};\r\n\r\nexport default gamesReducer;\r\n","// Reducer for Music\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\ttracks: null,\r\n\tloading: false,\r\n\terror: null,\r\n\tcurrentTrackIndex: 0,\r\n\tcurrentTrackID: null,\r\n\r\n\tisNowPlayingOpen: false,\r\n\tnowPlayingTrack: null,\r\n\ttogglePlay: 0,\r\n};\r\n\r\nlet newCurrentTrackIndex = null;\r\n\r\nconst musicReducer = (state = initialState, action) => {\r\n\tif (action.type === actionTypes.RESET_NOW_PLAYING) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tisNowPlayingOpen: false,\r\n\t\t\tnowPlayingTrack: null,\r\n\t\t};\r\n\t}\r\n\r\n\tif (!action.isAppDrawerOpen && action.currentMenuItem === \"Music\") {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase actionTypes.FETCH_TRACKS_START:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tloading: true,\r\n\t\t\t\t};\r\n\t\t\t// Set Tracks Object\r\n\t\t\tcase actionTypes.FETCH_TRACKS_SUCCESS:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\ttracks: action.tracks,\r\n\t\t\t\t\tcurrentTrackIndex: 0,\r\n\t\t\t\t\tcurrentTrackID: action.tracks[0].id,\r\n\t\t\t\t};\r\n\t\t\t// Set Error On Failure\r\n\t\t\tcase actionTypes.FETCH_TRACKS_FAILED:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\terror: action.error,\r\n\t\t\t\t};\r\n\t\t\t// Move Forward in Music Library\r\n\t\t\tcase actionTypes.MOVE_FORWARD:\r\n\t\t\t\tif (state.loading) return state;\r\n\t\t\t\tnewCurrentTrackIndex = (state.currentTrackIndex + 1) % state.tracks.length;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentTrackIndex: newCurrentTrackIndex,\r\n\t\t\t\t\tcurrentTrackID: state.tracks[newCurrentTrackIndex].id,\r\n\t\t\t\t};\r\n\t\t\t// Move Backward in Music Library\r\n\t\t\tcase actionTypes.MOVE_BACKWARD:\r\n\t\t\t\tif (state.loading) return state;\r\n\t\t\t\tnewCurrentTrackIndex =\r\n\t\t\t\t\t(state.currentTrackIndex - 1 + state.tracks.length) % state.tracks.length;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentTrackIndex: newCurrentTrackIndex,\r\n\t\t\t\t\tcurrentTrackID: state.tracks[newCurrentTrackIndex].id,\r\n\t\t\t\t};\r\n\t\t\t// Toggle Play/Pause\r\n\t\t\tcase actionTypes.SELECT_PRESSED:\r\n\t\t\tcase actionTypes.PLAY_PAUSE_PRESSED:\r\n\t\t\t\tif (state.loading) return state;\r\n\t\t\t\tif (state.isNowPlayingOpen) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\ttogglePlay: state.togglePlay + 1,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tisNowPlayingOpen: true,\r\n\t\t\t\t\t\tnowPlayingTrack: state.tracks[state.currentTrackIndex],\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\tcase actionTypes.FWD_PRESSED:\r\n\t\t\t\tif (state.isNowPlayingOpen) {\r\n\t\t\t\t\tnewCurrentTrackIndex = (state.currentTrackIndex + 1) % state.tracks.length;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tcurrentTrackIndex: newCurrentTrackIndex,\r\n\t\t\t\t\t\tcurrentTrackID: state.tracks[newCurrentTrackIndex].id,\r\n\t\t\t\t\t\tnowPlayingTrack: state.tracks[state.currentTrackIndex],\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t// eslint-disable-line no-fallthrough\r\n\t\t\tcase actionTypes.BWD_PRESSED:\r\n\t\t\t\tif (state.isNowPlayingOpen) {\r\n\t\t\t\t\tnewCurrentTrackIndex =\r\n\t\t\t\t\t\t(state.currentTrackIndex - 1 + state.tracks.length) %\r\n\t\t\t\t\t\tstate.tracks.length;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tcurrentTrackIndex: newCurrentTrackIndex,\r\n\t\t\t\t\t\tcurrentTrackID: state.tracks[newCurrentTrackIndex].id,\r\n\t\t\t\t\t\tnowPlayingTrack: state.tracks[state.currentTrackIndex],\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t// eslint-disable-line no-fallthrough\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nexport default musicReducer;\r\n","// Reducer for Settings\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\tisNightLightOn: false,\r\n\tisDarkModeOn: true,\r\n\tcurrentSettingIndex: 0,\r\n\ttotalSettings: 2,\r\n\tsettings: [\"Dark Mode\", \"Night Light\"],\r\n\tcurrentSetting: \"Dark Mode\",\r\n};\r\n\r\nlet newSettingIndex = null;\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n\tif (!action.isAppDrawerOpen && action.currentMenuItem === \"Settings\") {\r\n\t\tswitch (action.type) {\r\n\t\t\t// Toggle Theme\r\n\t\t\tcase actionTypes.TOGGLE_THEME:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisDarkModeOn: !state.isDarkModeOn,\r\n\t\t\t\t};\r\n\t\t\t// Toggle Night Light\r\n\t\t\tcase actionTypes.TOGGLE_NIGHT_LIGHT:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisNightLightOn: !state.isNightLightOn,\r\n\t\t\t\t};\r\n\t\t\t// Move Forward\r\n\t\t\tcase actionTypes.MOVE_FORWARD:\r\n\t\t\t\tnewSettingIndex = (state.currentSettingIndex + 1) % state.totalSettings;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentSettingIndex: newSettingIndex,\r\n\t\t\t\t\tcurrentSetting: state.settings[newSettingIndex],\r\n\t\t\t\t};\r\n\t\t\t// Move Backward\r\n\t\t\tcase actionTypes.MOVE_BACKWARD:\r\n\t\t\t\tnewSettingIndex =\r\n\t\t\t\t\t(state.currentSettingIndex - 1 + state.totalSettings) %\r\n\t\t\t\t\tstate.totalSettings;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentSettingIndex: newSettingIndex,\r\n\t\t\t\t\tcurrentSetting: state.settings[newSettingIndex],\r\n\t\t\t\t};\r\n\t\t\t// Select\r\n\t\t\tcase actionTypes.SELECT_PRESSED:\r\n\t\t\t\tconst toggledSetting =\r\n\t\t\t\t\tstate.currentSetting === \"Night Light\" ? \"isNightLightOn\" : \"isDarkModeOn\";\r\n\t\t\t\tconst toggledSettingValue = state[toggledSetting];\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\t[toggledSetting]: !toggledSettingValue,\r\n\t\t\t\t};\r\n\t\t\tdefault:\r\n\t\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nexport default settingsReducer;\r\n","// Combine Reducers into rootReducer\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport appDrawerReducer from './appDrawer'\r\nimport gamesReducer from './games'\r\nimport musicReducer from './music'\r\nimport settingsReducer from './settings'\r\n\r\nconst rootReducer = combineReducers({\r\n\tappDrawer: appDrawerReducer,\r\n\tmusic: musicReducer,\r\n\tgames: gamesReducer,\r\n\tsettings:settingsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import ZingTouch from \"zingtouch\";\r\n\r\nlet prevAngle = null;\r\n\r\n// Wheel Events Handler\r\nconst wheelRotateEventsHandler = (event, onMoveForward, onMoveBackward) => {\r\n\tconst currentAngle = Math.floor(event.detail.angle);\r\n\r\n\tif (!prevAngle || !event.detail.distanceFromOrigin) {\r\n\t\tprevAngle = currentAngle;\r\n\t} else {\r\n\t\tconst angleRotated = currentAngle - prevAngle;\r\n\t\tif (Math.abs(angleRotated) > 12) {\r\n\t\t\tif (angleRotated < 0) {\r\n\t\t\t\t// Rotated Clockwise 12deg\r\n\t\t\t\tonMoveForward();\r\n\t\t\t} else {\r\n\t\t\t\t// Rotated Counter-Clockwise 12deg\r\n\t\t\t\tonMoveBackward();\r\n\t\t\t}\r\n\t\t\t// Update Angle\r\n\t\t\tprevAngle = currentAngle;\r\n\t\t}\r\n\t}\r\n};\r\nexport const setUpWheelRotateEvents = (wheel, onMoveForward, onMoveBackward) => {\r\n\tconst region = new ZingTouch.Region(wheel);\r\n\tregion.bind(wheel, \"rotate\", event =>\r\n\t\twheelRotateEventsHandler(event, onMoveForward, onMoveBackward)\r\n\t);\r\n};\r\n\r\n// Click Events\r\n\r\nexport const setUpWheelClickEvents = (btnRefs, clickEvents) => {\r\n\t\r\n\tconst fwdBtnRegion = new ZingTouch.Region(btnRefs.fwdBtnRef.current);\r\n\tfwdBtnRegion.bind(btnRefs.fwdBtnRef.current, \"tap\", event =>\r\n\t\tclickEvents.onFwdBtnPressed()\r\n\t);\r\n\r\n\tconst bwdBtnRegion = new ZingTouch.Region(btnRefs.bwdBtnRef.current);\r\n\tbwdBtnRegion.bind(btnRefs.bwdBtnRef.current, \"tap\", event =>\r\n\t\tclickEvents.onBwdBtnPressed()\r\n\t);\r\n\r\n\tconst playPauseBtnRegion = new ZingTouch.Region(btnRefs.playPauseBtnRef.current);\r\n\tplayPauseBtnRegion.bind(btnRefs.playPauseBtnRef.current, \"tap\", event =>\r\n\t\tclickEvents.onPlayPauseBtnPressed()\r\n\t);\r\n\r\n\tconst menuBtnRegion = new ZingTouch.Region(btnRefs.menuBtnRef.current);\r\n\tmenuBtnRegion.bind(btnRefs.menuBtnRef.current, \"tap\", event =>\r\n\t\tclickEvents.onMenuBtnPressed()\r\n\t);\r\n\r\n\tconst selectBtnRegion = new ZingTouch.Region(btnRefs.selectBtnRef.current);\r\n\tselectBtnRegion.bind(btnRefs.selectBtnRef.current, \"tap\", event =>\r\n\t\tclickEvents.onSelectBtnPressed()\r\n\t);\r\n};\r\n","export const key = \"3ae4d7044dd10f695a3c4859ceba4980\";\r\nexport const napsterKey = \"ZDVkMTc0MWEtMmQyOC00ZTE2LWFjNTItYmE0ZDliNTcyZWI2\";","// Action Creators for Music\r\nimport axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nimport { napsterKey } from \"../../keys\";\r\n\r\nconst fetchTracksStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_TRACKS_START,\r\n\t};\r\n};\r\n\r\nconst fetchTracksSuccessful = tracks => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_TRACKS_SUCCESS,\r\n\t\ttracks: tracks,\r\n\t};\r\n};\r\n\r\nconst fetchTracksFailed = error => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_TRACKS_FAILED,\r\n\t\terror,\r\n\t};\r\n};\r\n\r\nexport const fetchTracks = () => {\r\n\treturn dispatch => {\r\n\t\tdispatch(fetchTracksStart());\r\n\t\tformatTracks(dispatch);\r\n\t};\r\n};\r\n\r\n// Fetch and Format Tracks Object\r\nconst formatTracks = async dispatch => {\r\n\ttry {\r\n\t\tconst response = await axios.get(\r\n\t\t\t`https://api.napster.com/v2.1/tracks/top?limit=12&apikey=${napsterKey}`\r\n\t\t);\r\n\t\tconst tracksData = response.data.tracks;\r\n\t\tconst tracks = [];\r\n\t\tfor (const trackData of tracksData) {\r\n\t\t\tconst track = {};\r\n\t\t\ttrack.id = trackData.id;\r\n\t\t\ttrack.songUrl = trackData.previewURL;\r\n\t\t\ttrack.name = trackData.name;\r\n\t\t\ttrack.artist = trackData.artistName;\r\n\t\t\tconst albumUrl = await trackData.links.albums.href;\r\n\t\t\tconst albumData = await axios.get(albumUrl + `?apikey=${napsterKey}`);\r\n\t\t\tconst imageUrl = albumData.data.albums[0].links.images.href;\r\n\r\n\t\t\tconst imageData = await axios.get(imageUrl + `?apikey=${napsterKey}`);\r\n\t\t\ttrack.imageUrl = imageData.data.images[0].url;\r\n\r\n\t\t\ttracks.push(track);\r\n\t\t}\r\n\r\n\t\tdispatch(fetchTracksSuccessful(tracks));\r\n\t} catch (error) {\r\n\t\tdispatch(fetchTracksFailed(error));\r\n\t}\r\n};\r\n\r\nexport const resetNowPlaying = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.RESET_NOW_PLAYING,\r\n\t};\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./Wheel.css\";\r\nimport { setUpWheelRotateEvents, setUpWheelClickEvents } from \"./wheelEvents\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\n\r\nconst Wheel = props => {\r\n\t// DOM Reference to Wheel\r\n\tconst wheelRef = useRef(null);\r\n\r\n\tconst btnRefs = {\r\n\t\tfwdBtnRef: useRef(null),\r\n\t\tbwdBtnRef: useRef(null),\r\n\t\tplayPauseBtnRef: useRef(null),\r\n\t\tselectBtnRef: useRef(null),\r\n\t\tmenuBtnRef: useRef(null),\r\n\t};\r\n\r\n\tconst { onMoveForward, onMoveBackward, ...clickEvents } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\t// Separate Wheel Events Handler\r\n\t\tsetUpWheelRotateEvents(wheelRef.current, onMoveForward, onMoveBackward);\r\n\r\n\t\tsetUpWheelClickEvents(btnRefs, clickEvents);\r\n\t}, [setUpWheelRotateEvents, setUpWheelClickEvents]);\r\n\r\n\treturn (\r\n\t\t<div id=\"wheel\" ref={wheelRef}>\r\n\t\t\t<div ref={btnRefs.menuBtnRef} className=\"wheel__item menu-btn\">\r\n\t\t\t\tMENU\r\n\t\t\t</div>\r\n\t\t\t<div ref={btnRefs.fwdBtnRef} className=\"wheel__item seekfwd-btn\">\r\n\t\t\t\t<i className=\"fas fa-forward\"></i>\r\n\t\t\t</div>\r\n\t\t\t<div ref={btnRefs.bwdBtnRef} className=\"wheel__item seekbwd-btn\">\r\n\t\t\t\t<i className=\"fas fa-backward\"></i>\r\n\t\t\t</div>\r\n\t\t\t<div ref={btnRefs.playPauseBtnRef} className=\"wheel__item play-pause-btn\">\r\n\t\t\t\t<i className=\"fas fa-play\"></i>\r\n\t\t\t\t<i className=\"fas fa-pause\"></i>\r\n\t\t\t</div>\r\n\t\t\t<div ref={btnRefs.selectBtnRef} className=\"wheel__item select-btn\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonMenuBtnPressed: () => dispatch(actions.menuBtnPressed()),\r\n\t\tonSelectBtnPressed: () => dispatch(actions.selectBtnPressed()),\r\n\t\tonFwdBtnPressed: () => dispatch(actions.fwdBtnPressed()),\r\n\t\tonBwdBtnPressed: () => dispatch(actions.bwdBtnPressed()),\r\n\t\tonPlayPauseBtnPressed: () => dispatch(actions.playPauseBtnPressed()),\r\n\t\tonMoveForward: () => dispatch(actions.moveForward()),\r\n\t\tonMoveBackward: () => dispatch(actions.moveBackward()),\r\n\t};\r\n};\r\nexport default connect(null, mapDispatchToProps)(Wheel);\r\n","// Action Creators for Wheel\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const moveForward = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.MOVE_FORWARD,\r\n\t};\r\n};\r\n\r\nexport const moveBackward = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.MOVE_BACKWARD,\r\n\t};\r\n};\r\n\r\nexport const menuBtnPressed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.MENU_PRESSED,\r\n\t};\r\n};\r\n\r\nexport const selectBtnPressed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.SELECT_PRESSED,\r\n\t};\r\n};\r\n\r\nexport const fwdBtnPressed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.FWD_PRESSED,\r\n\t};\r\n};\r\n\r\nexport const bwdBtnPressed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.BWD_PRESSED,\r\n\t};\r\n};\r\n\r\nexport const playPauseBtnPressed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.PLAY_PAUSE_PRESSED,\r\n\t};\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./NotificationBar.css\";\r\n\r\nconst NotificationBar = props => {\r\n\t// Clock\r\n\tconst [time, setTime] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Update time every Second\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetTime(\r\n\t\t\t\tnew Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })\r\n\t\t\t);\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className=\"NotificationBar\">\r\n\t\t\t{/* Clock */}\r\n\t\t\t<div className=\"time\">{time}</div>\r\n\t\t\t{/* Wifi and Battery Icons */}\r\n\t\t\t<div className=\"icons\">\r\n\t\t\t\t<i className=\"fas fa-battery-half\" />\r\n\t\t\t\t<i className=\"fas fa-wifi\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotificationBar;\r\n","import React, { Children } from \"react\";\r\n\r\nimport \"./Grid.css\";\r\n\r\n// Custom Grid Component\r\nconst grid = props => {\r\n\tconst nRows = Math.floor(Children.count(props.children) / props.nCols);\r\n\r\n\tconst gridStyle = {\r\n\t\tgridTemplateColumns: `repeat(${props.nCols},1fr)`,\r\n\t\tgridTemplateRows: `repeat(${nRows},${props.rowHeight})`,\r\n\t\tgap: `${props.gap}`,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Grid\" style={gridStyle}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default grid;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"../../UI/Grid/Grid\";\r\n\r\nimport SettingsIcon from \"../../../assets/icons/Settings.png\";\r\nimport GamesIcon from \"../../../assets/icons/Games.png\";\r\nimport WeatherIcon from \"../../../assets/icons/Weather.png\";\r\nimport MusicIcon from \"../../../assets/icons/Music.png\";\r\n\r\nimport \"./AppDrawer.css\";\r\n\r\nconst appDrawer = props => {\r\n\r\n\t// App Drawer Icon Images\r\n\tconst icons = {\r\n\t\tSettings: SettingsIcon,\r\n\t\tGames: GamesIcon,\r\n\t\tWeather: WeatherIcon,\r\n\t\tMusic: MusicIcon,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid nCols={2} rowHeight={\"80px\"} gap={\"1rem\"}>\r\n\t\t\t{/* App Drawer Icons */}\r\n\t\t\t{props.menuItems.map(menuItem => {\r\n\t\t\t\t// Highlight Current App Icon\r\n\t\t\t\tconst styles =\r\n\t\t\t\t\tmenuItem === props.currentMenuItem\r\n\t\t\t\t\t\t? \"icon-container active\"\r\n\t\t\t\t\t\t: \"icon-container inactive\";\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={styles} key={menuItem}>\r\n\t\t\t\t\t\t<img className=\"appDrawerIcon\" src={icons[menuItem]} alt=\"Settings\" />\r\n\t\t\t\t\t\t{menuItem}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmenuItems: state.appDrawer.menuItems,\r\n\t\tcurrentMenuItem: state.appDrawer.currentMenuItem,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(appDrawer);\r\n","export const convertToCelsius = kelvinTemp => {\r\n\treturn parseFloat((kelvinTemp - 273.15).toFixed(1)) + \"°C\";\r\n};\r\n\r\n// Format time in hh:mm:ss format\r\nexport const formatTime = time => {\r\n\tconst timeInSeconds = parseInt(time);\r\n\tconst ss = addPadding(parseInt(timeInSeconds % 60));\r\n\tconst mins = parseInt(timeInSeconds / 60);\r\n\tconst mm = addPadding(parseInt(mins % 60));\r\n\tconst hours = parseInt(mins / 60);\r\n\tconst hh = addPadding(parseInt(hours % 60));\r\n\treturn hh > 0 ? `${hh}:${mm}:${ss}` : `${mm}:${ss}`;\r\n};\r\n\r\nconst addPadding = num => {\r\n\treturn num < 10 ? \"0\" + num : num;\r\n};\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\n// UI Spinner/Loader\r\nconst spinner = props => (\r\n\t<div className=\"spinner\">\r\n\t\t<div className=\"circle1\" />\r\n\t\t<div className=\"circle2\" />\r\n\t\t<div className=\"circle3\" />\r\n\t\t<div className=\"activeCircle\" />\r\n\t</div>\r\n);\r\n\r\nexport default spinner;\r\n","import React from \"react\";\r\n\r\nimport \"./Error.css\";\r\n\r\n// Error Screen\r\nconst Error = props => {\r\n\treturn (\r\n\t\t<div className=\"Error\">\r\n\t\t\t<i className=\"errorIcon fas fa-exclamation-triangle\"></i>\r\n\t\t\t{props.error || \"An Error Occured\"}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Error;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { convertToCelsius } from \"../../../utils\";\r\nimport { key } from \"../../../keys.js\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport ErrorScreen from \"../../UI/Error/Error\";\r\n\r\nimport \"./Weather.css\";\r\n\r\nconst Weather = props => {\r\n\tconst [showSpinner, setShowSpinner] = useState(true);\r\n\tconst [weatherData, setWeatherData] = useState({});\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst errorCallback = err => {\r\n\t\t\tsetError(err);\r\n\t\t\tsetShowSpinner(false);\r\n\t\t};\r\n\t\tconst successCallback = async position => {\r\n\t\t\tconst latitude = position.coords.latitude;\r\n\t\t\tconst longitude = position.coords.longitude;\r\n\t\t\t//Fetch Eather Data\r\n\t\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.get(url);\r\n\t\t\t\tconst tempKelvin = res.data.main.temp;\r\n\t\t\t\tconst temperature = convertToCelsius(tempKelvin);\r\n\t\t\t\tconst desc = res.data.weather[0].main;\r\n\t\t\t\tconst icon = res.data.weather[0].icon;\r\n\t\t\t\tconst iconUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\t\t\t\tsetWeatherData({ temperature, desc, iconUrl });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tsetError(\"Fetching Weather Data Failed\");\r\n\t\t\t\tsetShowSpinner(false);\r\n\t\t\t}\r\n\t\t};\r\n\t\tnavigator.geolocation.getCurrentPosition(successCallback, errorCallback);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Weather Data has been fetched\r\n\t\tif (Object.keys(weatherData).length > 0) setShowSpinner(false);\r\n\t}, [weatherData]);\r\n\r\n\tconst weatherContent = (\r\n\t\t<>\r\n\t\t\t<img className=\"weatherIcon\" src={weatherData.iconUrl} alt=\"Weather Icon\" />\r\n\t\t\t<div className=\"weatherTemp\">{weatherData.temperature}</div>\r\n\t\t\t<div className=\"weatherDesc\">{weatherData.desc}</div>\r\n\t\t</>\r\n\t);\r\n\r\n\tconst content = error ? <ErrorScreen error={error} /> : weatherContent;\r\n\treturn <div className=\"weather\">{showSpinner ? <Spinner /> : content}</div>;\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { formatTime } from \"../../../../utils\";\r\n\r\nimport * as actions from \"../../../../store/actions\";\r\n\r\nimport \"./NowPlaying.css\";\r\n\r\nconst NowPlaying = props => {\r\n\tconst trackRef = useRef(null);\r\n\tconst { resetNowPlaying, track } = props;\r\n\r\n\tconst [isPlaying, setIsPlaying] = useState(false);\r\n\tconst [currentTime, setCurrentTime] = useState(\"00:00\");\r\n\r\n\tuseEffect(() => {\r\n\t\t// Update current playback time\r\n\t\tconst updateCurrentTime = setInterval(() => {\r\n\t\t\tsetCurrentTime(trackRef.current.currentTime);\r\n\t\t\tif (trackRef.current.currentTime === trackRef.current.duration)\r\n\t\t\t\tsetIsPlaying(false);\r\n\t\t}, 500);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(updateCurrentTime);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Reset Current Track when exiting\r\n\t\treturn () => {\r\n\t\t\tresetNowPlaying();\r\n\t\t};\r\n\t}, [resetNowPlaying]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Toggle Play/Pause\r\n\t\tif (isPlaying && !trackRef.current.paused) trackRef.current.pause();\r\n\t\telse if (trackRef.current.paused) trackRef.current.play();\r\n\t\tsetIsPlaying(!isPlaying);\r\n\t}, [props.togglePlay]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Play New Track\r\n\t\tif (trackRef.current) {\r\n\t\t\tsetIsPlaying(true);\r\n\t\t\ttrackRef.current.play();\r\n\t\t}\r\n\t}, [track]);\r\n\r\n\tconst playIcon = <i className=\"fas fa-play\"></i>;\r\n\tconst pauseIcon = <i className=\"fas fa-pause\"></i>;\r\n\r\n\t// Set Play Time\r\n\tlet playTime = null;\r\n\tif (currentTime && trackRef.current && !isNaN(trackRef.current.duration))\r\n\t\tplayTime = (\r\n\t\t\t<div className=\"playTime\">\r\n\t\t\t\t{formatTime(currentTime)} / {formatTime(trackRef.current.duration)}{\" \"}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"NowPlaying\">\r\n\t\t\t<div className=\"nowPlayingImg\">\r\n\t\t\t\t<img className=\"nowPlayingImg\" src={props.track.imageUrl} alt=\"Album Art\" />\r\n\t\t\t\t<div className=\"nowPlayingIcon\">{isPlaying ? pauseIcon : playIcon}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"nowPlayingName\">{props.track.name}</div>\r\n\t\t\t<div className=\"nowPlayingArtist\">{props.track.artist}</div>\r\n\t\t\t{playTime}\r\n\t\t\t<audio ref={trackRef} src={props.track.songUrl} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttrack: state.music.nowPlayingTrack,\r\n\t\ttogglePlay: state.music.togglePlay,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tresetNowPlaying: () => dispatch(actions.resetNowPlaying()),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NowPlaying);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ErrorScreen from \"../../../UI/Error/Error\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\nimport Grid from \"../../../UI/Grid/Grid\";\r\n\r\nimport * as actions from \"../../../../store/actions\";\r\n\r\nimport \"./MusicLibrary.css\";\r\n\r\nconst MusicLibrary = props => {\r\n\t// Cuurent Track Selection\r\n\tconst currentTrackRef = useRef(null);\r\n\tconst { currentTrackID, fetchTracks } = props;\r\n\r\n\t// Fetch Songs from Napster API\r\n\tuseEffect(() => {\r\n\t\tfetchTracks();\r\n\t}, [fetchTracks]);\r\n\r\n\t// Scroll when a new track is selected\r\n\tuseEffect(() => {\r\n\t\tif (currentTrackRef.current)\r\n\t\t\tcurrentTrackRef.current.scrollIntoView(false, { behaviour: \"smooth\" });\r\n\t}, [currentTrackID]);\r\n\r\n\tlet spinner = (\r\n\t\t<div className=\"centerSpinner\">\r\n\t\t\t<Spinner />\r\n\t\t</div>\r\n\t);\r\n\r\n\tlet musicLibrary = (\r\n\t\t<Grid nCols={3} gap={\"0.5rem\"} rowHeight={\"85px\"}>\r\n\t\t\t{/* Music Library Tracks from Napster API */}\r\n\t\t\t{props.tracks &&\r\n\t\t\t\tprops.tracks.map(track => {\r\n\t\t\t\t\tconst trackProperties = {};\r\n\t\t\t\t\t// Check if this track is the one currently selected\r\n\t\t\t\t\tif (track.id === props.currentTrackID) {\r\n\t\t\t\t\t\ttrackProperties.className = \"track activeTrack\";\r\n\t\t\t\t\t\ttrackProperties.ref = currentTrackRef;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"track inactiveTrack\" key={track.id} {...trackProperties}>\r\n\t\t\t\t\t\t\t<div className=\"trackName\">{track.name}</div>\r\n\t\t\t\t\t\t\t<img className=\"trackImage\" alt={track.name} src={track.imageUrl} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</Grid>\r\n\t);\r\n\r\n\tif (props.error) {\r\n\t\tmusicLibrary = <ErrorScreen error={\"Error Fetching Music\"} />;\r\n\t}\r\n\r\n\treturn props.loading ? spinner : musicLibrary;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tloading: state.music.loading,\r\n\t\ttracks: state.music.tracks,\r\n\t\terror: state.music.error,\r\n\t\tcurrentTrackID: state.music.currentTrackID,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tfetchTracks: () => dispatch(actions.fetchTracks()),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MusicLibrary);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport NowPlaying from \"./NowPlaying/NowPlaying\";\r\nimport MusicLibrary from \"./Library/MusicLibrary\";\r\n\r\n// Music Container\r\nconst Music = props => {\r\n\treturn props.isNowPlayingOpen ? <NowPlaying /> : <MusicLibrary />;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn { isNowPlayingOpen: state.music.isNowPlayingOpen };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Music);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./BallGame.css\";\r\n\r\nconst BallGame = props => {\r\n\t// DOM References\r\n\tconst ballRef = useRef(null);\r\n\tconst blockRef = useRef(null);\r\n\tconst pillarRef = useRef(null);\r\n\tconst scoreRef = useRef(0);\r\n\r\n\tconst checkGameInterval = useRef(null);\r\n\tconst { restartGame } = props;\r\n\r\n\t// Load Retry/Score screen if game has ended\r\n\tconst [gameEnded, setGameEnded] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Keep track of Score\r\n\t\tscoreRef.current = 0;\r\n\r\n\t\tconst changeBlockHeight = () => {\r\n\t\t\tblockRef.current.style.top = getRandomHeight();\r\n\t\t};\r\n\r\n\t\t// Change obstacle height after each animation\r\n\t\tpillarRef.current.addEventListener(\"animationiteration\", changeBlockHeight);\r\n\r\n\t\tcheckGameInterval.current = setInterval(() => {\r\n\t\t\t// Get Positions\r\n\t\t\tconst ballTopPosition = parseFloat(getComputedStyle(ballRef.current).top);\r\n\t\t\tconst blockTopPosition = parseFloat(getComputedStyle(blockRef.current).top);\r\n\t\t\tconst pillarLeftPosition = parseFloat(\r\n\t\t\t\tgetComputedStyle(pillarRef.current).left\r\n\t\t\t);\r\n\r\n\t\t\tif (detectCollision(ballTopPosition, pillarLeftPosition, blockTopPosition)) {\r\n\t\t\t\tclearInterval(checkGameInterval.current);\r\n\t\t\t\tsetGameEnded(true);\r\n\t\t\t}\r\n\t\t\t//Increase Current Score\r\n\t\t\tscoreRef.current += 0.1;\r\n\t\t}, 10);\r\n\r\n\t\treturn () => clearInterval(checkGameInterval.current);\r\n\t}, []);\r\n\t// Move Up\r\n\tuseEffect(() => {\r\n\t\tif (ballRef.current) {\r\n\t\t\tconst ballPosition = parseFloat(getComputedStyle(ballRef.current).top);\r\n\t\t\tballRef.current.style.top = ballPosition - 8 + \"px\";\r\n\t\t}\r\n\t}, [props.moveUp]);\r\n\t// Move Down\r\n\tuseEffect(() => {\r\n\t\tif (ballRef.current) {\r\n\t\t\tconst ballPosition = parseFloat(getComputedStyle(ballRef.current).top);\r\n\t\t\tballRef.current.style.top = ballPosition + 8 + \"px\";\r\n\t\t}\r\n\t}, [props.moveDown]);\r\n\r\n\t// Restart Game\r\n\tuseEffect(() => {\r\n\t\t// Game Ended\r\n\t\tif (!ballRef.current) {\r\n\t\t\trestartGame(true);\r\n\t\t}\r\n\t}, [props.selectPressed, restartGame]);\r\n\r\n\tconst game = (\r\n\t\t<div id=\"gameArea\">\r\n\t\t\t<div id=\"ball\" ref={ballRef} />\r\n\t\t\t<div id=\"pillar\" ref={pillarRef}>\r\n\t\t\t\t<div id=\"block\" ref={blockRef} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst resultScreen = (\r\n\t\t<div className=\"gameResult\">\r\n\t\t\t<div className=\"score\">Score {Math.floor(scoreRef.current)}</div>\r\n\t\t\tPlay Again?\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn gameEnded ? resultScreen : game;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmoveUp: state.games.gameMoveUp,\r\n\t\tmoveDown: state.games.gameMoveDown,\r\n\t\tselectPressed: state.games.gameSelectPressed,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(BallGame);\r\n\r\n// Game Utility Functions\r\nconst getRandomHeight = () => {\r\n\tconst random = Math.random() * 100;\r\n\treturn random + 25 + \"px\";\r\n};\r\n\r\nconst detectCollision = (ballTopPosition, pillarLeftPosition, blockTopPosition) => {\r\n\t// Ball height = 25px\r\n\tif (ballTopPosition <= 0 || ballTopPosition + 25 >= 225) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Collision\r\n\r\n\t// Ball Position from left -> 30px\r\n\t// Block Height = 70px\r\n\tif (\r\n\t\tpillarLeftPosition <= 30 &&\r\n\t\t(ballTopPosition <= blockTopPosition ||\r\n\t\t\tballTopPosition + 25 >= blockTopPosition + 70)\r\n\t) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Countdown.css\";\r\n\r\nconst Countdown = props => {\r\n\t// Countdown timer\r\n\tconst [timer, setTimer] = useState(props.seconds);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Update timer every second\r\n\t\tconst decrementCountdown = setInterval(() => {\r\n\t\t\tsetTimer(prevTimer => prevTimer - 1);\r\n\t\t}, 1000);\r\n\r\n\t\t// Clear interval on unmount \r\n\t\treturn () => {\r\n\t\t\tclearInterval(decrementCountdown);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"countdown\">{timer}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Countdown;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport BallGame from \"./BallGame/BallGame\";\r\nimport Countdown from \"./Countdown/Countdown\";\r\n\r\nconst Games = props => {\r\n\t// Keep track of number of seconds remaining\r\n    const countdown = useRef(null);\r\n\r\n\t// Loading Status\r\n\tconst [gameLoading, setGameLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Start Game after 3s\r\n        if (gameLoading) {\r\n\t\t\tcountdown.current = setTimeout(() => {\r\n\t\t\t\tsetGameLoading(false);\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\r\n        return () => clearTimeout(countdown.current)\r\n\t}, [gameLoading]);\r\n\r\n\treturn gameLoading ? (\r\n\t\t<Countdown seconds={3} />\r\n\t) : (\r\n\t\t<BallGame restartGame={setGameLoading} />\r\n\t);\r\n};\r\n\r\nexport default Games;\r\n","import React from \"react\";\r\n\r\nimport \"./Toggler.css\";\r\n\r\n// Toggle Switch\r\n\r\nconst Toggler = props => {\r\n\treturn (\r\n\t\t<div className=\"switch-container\">\r\n\t\t\t<input type=\"checkbox\" name=\"switch\" id=\"switch\" checked={props.isOn} readOnly/>\r\n\t\t\t<label className=\"switch-label\" htmlFor=\"switch\">\r\n\t\t\t\t{/* Cross on top of button */}\r\n\t\t\t\t<div className=\"toggler\">\r\n\t\t\t\t\t<div className=\"horizontal-line lines\" />\r\n\t\t\t\t\t<div className=\"vertical-line lines\" />\r\n\t\t\t\t</div>\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Toggler;\r\n","import React from \"react\";\r\n\r\nimport Toggler from \"../../../UI/Toggler/Toggler\";\r\n\r\nimport \"./Setting.css\";\r\n\r\n// Individual Setting Component\r\nconst Setting = props => {\r\n\r\n\t// Styling for Active Selection\r\n\tconst styles = props.active ? \"Setting activeSetting\" : \"Setting\";\r\n\tconst icon = props.active ? <i className=\"fas fa-angle-right\"></i> : null;\r\n\r\n\treturn (\r\n\t\t<div className={styles}>\r\n\t\t\t<div className=\"SettingTitle\">\r\n\t\t\t\t{icon}\r\n\t\t\t\t{props.title}\r\n\t\t\t</div>\r\n\t\t\t{/* Toggle Switch */}\r\n\t\t\t<Toggler isOn={props.isOn}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Setting;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Setting from \"./Setting/Setting\";\r\n\r\nimport \"./Settings.css\";\r\n\r\nconst settings = props => {\r\n\treturn (\r\n\t\t<div className=\"Settings\">\r\n\r\n\t\t\t{/* Setting Icon on Top */}\r\n\t\t\t<div className=\"SettingsIcon\">\r\n\t\t\t\t<i className=\"fas fa-cog\"></i>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Individual Settings */}\r\n\t\t\t<Setting\r\n\t\t\t\ttitle=\"Dark Mode\"\r\n\t\t\t\tactive={props.currentSetting === \"Dark Mode\"}\r\n\t\t\t\tisOn={props.isDarkModeOn}\r\n\t\t\t/>\r\n\t\t\t<Setting\r\n\t\t\t\ttitle=\"Night Light\"\r\n\t\t\t\tactive={props.currentSetting === \"Night Light\"}\r\n\t\t\t\tisOn={props.isNightLightOn}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisNightLightOn: state.settings.isNightLightOn,\r\n\t\tisDarkModeOn: state.settings.isDarkModeOn,\r\n\t\tcurrentSetting: state.settings.currentSetting,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(settings);\r\n","import React from \"react\";\r\n\r\nimport \"./Overlay.css\";\r\n\r\n// Night Light Black Overlay\r\nconst Overlay = props => {\r\n\treturn <div className=\"Overlay\" />;\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Components to be displayed on screen\r\nimport NotificationBar from \"../DisplayItems/NotificationBar/NotificationBar\";\r\nimport AppDrawer from \"../DisplayItems/AppDrawer/AppDrawer\";\r\nimport Weather from \"../DisplayItems/Weather/Weather\";\r\nimport Music from \"../DisplayItems/Music/Music\";\r\nimport Games from \"../DisplayItems/Games/Games\";\r\nimport Settings from \"../DisplayItems/Settings/Settings\";\r\n\r\nimport Overlay from \"../UI/Overlay/Overlay\";\r\n\r\nimport \"./DisplayScreen.css\";\r\n\r\n// Menu item Components\r\nconst MenuItems = {\r\n\tWeather,\r\n\tMusic,\r\n\tGames,\r\n\tSettings,\r\n};\r\n\r\nconst DisplayScreen = props => {\r\n\tconst screenRef = useRef(null);\r\n\tconst { isDarkModeOn, isNightLightOn, isAppDrawerOpen, currentMenuItem } = props;\r\n\r\n\t// Dark Mode is On by default\r\n\tuseEffect(() => {\r\n\t\tscreenRef.current.classList.toggle(\"dark\");\r\n\t}, [isDarkModeOn]);\r\n\r\n\t// Add a Dark Overlay if Night Light is on\r\n\tconst overlay = isNightLightOn ? <Overlay /> : null;\r\n\r\n\t// Current Menu Item Component\r\n\tconst MenuItem = MenuItems[currentMenuItem];\r\n\r\n\treturn (\r\n\t\t<div className=\"displayScreen\" ref={screenRef}>\r\n\t\t\t{overlay}\r\n\t\t\t<NotificationBar />\r\n\t\t\t{isAppDrawerOpen ? <AppDrawer /> : <MenuItem />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisAppDrawerOpen: state.appDrawer.isAppDrawerOpen,\r\n\t\tcurrentMenuItem: state.appDrawer.currentMenuItem,\r\n\t\tisNightLightOn: state.settings.isNightLightOn,\r\n\t\tisDarkModeOn: state.settings.isDarkModeOn,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DisplayScreen);\r\n","import React from \"react\";\r\n\r\nimport \"./IpodFrame.css\";\r\n\r\nimport Wheel from \"../Wheel/Wheel\";\r\nimport DisplayScreen from \"../DisplayScreen/DisplayScreen\";\r\n\r\n\r\n// iPod Body/Frame\r\n\r\nconst ipodFrame = props => {\r\n\treturn (\r\n\t\t<div className=\"IpodFrame\">\r\n\t\t\t<DisplayScreen />\r\n\t\t\t<Wheel />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ipodFrame;\r\n","import React from \"react\";\nimport IpodFrame from \"./components/IpodFrame/IpodFrame\";\n\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<IpodFrame />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\n\r\nimport rootReducer from \"./store/reducers/reducer\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\n// Custom Thunk Middleware\r\n// Make isAppDrawerOpen and currentMenuItem available to all reducers\r\nconst customThunkMiddleWare = ({ dispatch, getState }) => next => action => {\r\n\tif (typeof action === \"function\") return action(dispatch, getState);\r\n\r\n\tconst state = getState();\r\n\taction.isAppDrawerOpen = state.appDrawer.isAppDrawerOpen;\r\n\taction.currentMenuItem = state.appDrawer.currentMenuItem;\r\n\treturn next(action);\r\n};\r\n\r\n// Create Store with Redux Devtools Extension\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeWithDevTools(applyMiddleware(customThunkMiddleWare))\r\n);\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}